fragment BasicDocument on Document {
  __typename
  id
  title
  reference

  ... on PdfDocument {
    form {
      enabled
    }
  }
}
fragment SignedDocument on Document {
  id
  title
  blob
  signatures {
    __typename
    signatory {
      id
    }

    ... on JWTSignature {
      jwt
      jwks
      claims {
        name
        value
      }
    }
    ... on DrawableSignature {
      name
      image
    }
  }
}
fragment BasicSignatory on Signatory {
  id
  status
  statusReason
  href
  downloadHref
  reference
  role

  signatureOrder {
    id
    status
    closedAt
    expiresAt
  }

  evidenceProviders {
    __typename
    id
  }

  documents {
    edges {
      status
      node {
        __typename
        id
      }
    }
  }
}
fragment BasicSignatureOrder on SignatureOrder {
  id
  status
  title
  closedAt
  expiresAt
  maxSignatories

  signatories {
    ...BasicSignatory
  }

  evidenceProviders {
    __typename
    id
  }
}

fragment BasicBatchSignatory on BatchSignatory {
  id
  token
  href
}

mutation createSignatureOrder($input: CreateSignatureOrderInput!) {
  createSignatureOrder(input: $input) {
    signatureOrder {
      ... BasicSignatureOrder
      documents {
        ...BasicDocument
      }
    }
  }
}

mutation cleanupSignatureOrder($input: CleanupSignatureOrderInput!) {
  cleanupSignatureOrder(input: $input) {
    signatureOrder {
      ... BasicSignatureOrder
      documents {
        ...BasicDocument
      }
    }
  }
}

mutation addSignatory($input: AddSignatoryInput!) {
  addSignatory(input: $input) {
    signatory {
      ...BasicSignatory
    }
  }
}

mutation addSignatories($input: AddSignatoriesInput!) {
  addSignatories(input: $input) {
    signatories {
      ...BasicSignatory
    }
  }
}

mutation changeSignatory($input: ChangeSignatoryInput!) {
  changeSignatory(input: $input) {
    signatory {
      ...BasicSignatory
    }
  }
}

mutation closeSignatureOrder($input: CloseSignatureOrderInput!) {
  closeSignatureOrder(input: $input) {
    signatureOrder {
      ... BasicSignatureOrder
      documents {
        ...BasicDocument
        ...SignedDocument
      }
    }
  }
}

mutation cancelSignatureOrder($input: CancelSignatureOrderInput!) {
  cancelSignatureOrder(input: $input) {
    signatureOrder {
      ... BasicSignatureOrder
      documents {
        ...BasicDocument
      }
    }
  }
}

mutation signActingAs($input: SignActingAsInput!) {
  signActingAs(input: $input) {
    signatory {
      ...BasicSignatory
    }
  }
}

mutation validateDocument($input: ValidateDocumentInput!) {
  validateDocument(input: $input) {
    valid
    errors
    fixable
  }
}

mutation extendSignatureOrder($input: ExtendSignatureOrderInput!) {
  extendSignatureOrder(input: $input) {
    signatureOrder {
      ... BasicSignatureOrder
      documents {
        ...BasicDocument
      }
    }
  }
}

mutation deleteSignatory($input: DeleteSignatoryInput!) {
  deleteSignatory(input: $input) {
    signatureOrder {
      ... BasicSignatureOrder
    }
  }
}

mutation createBatchSignatory($input: CreateBatchSignatoryInput!) {
  createBatchSignatory(input: $input) {
    batchSignatory {
      ...BasicBatchSignatory

      items {
        signatureOrder {
          ...BasicSignatureOrder
        }

        signatory {
          ...BasicSignatory
        }
      }
    }
  }
}

mutation changeSignatureOrder($input: ChangeSignatureOrderInput!) {
  changeSignatureOrder(input: $input) {
    signatureOrder {
      ...BasicSignatureOrder
    }
  }
}

query signatureOrder($id: ID!) {
  signatureOrder(id: $id) {
    ... BasicSignatureOrder
  }
}

query signatureOrderWithDocuments($id: ID!) {
  signatureOrder(id: $id) {
    ... BasicSignatureOrder

    documents {
      ...BasicDocument
      ...SignedDocument
    }
  }
}

query signatory($id: ID!) {
  signatory(id: $id) {
    signatureOrder {
      ...BasicSignatureOrder
    }
    ...BasicSignatory
  }
}

query signatureOrders($status: SignatureOrderStatus, $first: Int!, $after: String) {
  viewer {
    __typename
    ... on Application {
      signatureOrders(status: $status, first: $first, after: $after) {
        edges {
          node {
            ... BasicSignatureOrder
          }
        }
      }
    }
  }
}

query batchSignatory($id: ID!) {
  batchSignatory(id: $id) {
    ...BasicBatchSignatory

    items {
      signatureOrder {
        ...BasicSignatureOrder
      }

      signatory {
        ...BasicSignatory
      }
    }
  }
}
