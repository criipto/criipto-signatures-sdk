on: [push]

jobs:
  nodejs-sdk-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [16, 18, 20, 22]
    steps:
      - uses: actions/checkout@v4
      - name: Setup kernel for build, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.version }}
      - run: npm ci
        working-directory: packages/nodejs
      - run: npm run check
        working-directory: packages/nodejs
      - run: npm run test:unit:nodejs

  codegen-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - run: npm ci
      - name: Check (codegen-shared)
        run: npm run check && npm run lint
        working-directory: codegen/graphql-codegen-shared
      - name: Test (codegen-shared)
        run: npm run test
        working-directory: codegen/graphql-codegen-shared

  dotnet-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - run: dotnet tool restore
        working-directory: packages/dotnet
      - run: npm run test:unit:dotnet

  nodejs-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - run: npm ci
      - run: npx prettier --check .

  dotnet-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - run: dotnet tool restore
      - run: dotnet csharpier --check .
      - run: dotnet format style packages/dotnet/Criipto.Signatures.sln --verify-no-changes
      - run: dotnet format analyzers packages/dotnet/Criipto.Signatures.sln --verify-no-changes

  python-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'packages/python'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/python-setup
      - name: Install example project
        working-directory: packages/python/example
        run: uv sync --locked --all-extras --dev
      - name: Ruff (linter)
        run: uv run ruff check
      - name: ty (type-checking)
        run: |
          uvx ty check src
          uvx ty check --project example

  python-formatting:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'packages/python'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/python-setup
      - name: Run checks
        run: uv run ruff format --check
